# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/orbitron/METADATA.json /home/travis/build/fontdirectory/orbitron/builds/build
$ cp -a /home/travis/build/fontdirectory/orbitron/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/orbitron/builds/build
$ cp -a /home/travis/build/fontdirectory/orbitron/FONTLOG.txt /home/travis/build/fontdirectory/orbitron/builds/build
$ cp -a Orbitron-Regular.ttf.ttx Orbitron-Medium.ttf.ttx Orbitron-Bold.ttf.ttx Orbitron-Black.ttf.ttx src/Orbitron-Black.otf.ttx src/Orbitron-Medium.otf.ttx src/Orbitron-Light.otf.ttx src/Orbitron-Bold.otf.ttx src/Orbitron-Regular-TTF.sfd src/Orbitron-Medium-TTF.sfd src/Orbitron-Bold-TTF.sfd src/Orbitron-Black-TTF.sfd Orbitron-Regular.ttf._h_e_a_d.ttx Orbitron-Regular.ttf._h_h_e_a.ttx Orbitron-Regular.ttf._l_o_c_a.ttx Orbitron-Regular.ttf._c_m_a_p.ttx Orbitron-Regular.ttf._p_o_s_t.ttx Orbitron-Regular.ttf.D_S_I_G_.ttx Orbitron-Regular.ttf.G_D_E_F_.ttx Orbitron-Regular.ttf._n_a_m_e.ttx Orbitron-Regular.ttf._k_e_r_n.ttx Orbitron-Regular.ttf._g_l_y_f.ttx Orbitron-Regular.ttf.G_P_O_S_.ttx Orbitron-Regular.ttf._p_r_e_p.ttx Orbitron-Regular.ttf._g_a_s_p.ttx Orbitron-Regular.ttf._m_a_x_p.ttx Orbitron-Regular.ttf.F_F_T_M_.ttx Orbitron-Regular.ttf._h_m_t_x.ttx Orbitron-Regular.ttf.GlyphOrder.ttx Orbitron-Regular.ttf.G_S_U_B_.ttx Orbitron-Regular.ttf.O_S_2f_2.ttx Orbitron-Medium.ttf._m_a_x_p.ttx Orbitron-Medium.ttf._p_o_s_t.ttx Orbitron-Medium.ttf._h_e_a_d.ttx Orbitron-Medium.ttf._h_m_t_x.ttx Orbitron-Medium.ttf._h_h_e_a.ttx Orbitron-Medium.ttf._g_a_s_p.ttx Orbitron-Medium.ttf._p_r_e_p.ttx Orbitron-Medium.ttf.G_S_U_B_.ttx Orbitron-Medium.ttf.D_S_I_G_.ttx Orbitron-Medium.ttf._k_e_r_n.ttx Orbitron-Medium.ttf.GlyphOrder.ttx Orbitron-Medium.ttf.F_F_T_M_.ttx Orbitron-Medium.ttf.G_P_O_S_.ttx Orbitron-Medium.ttf._n_a_m_e.ttx Orbitron-Medium.ttf._l_o_c_a.ttx Orbitron-Medium.ttf._c_m_a_p.ttx Orbitron-Medium.ttf.G_D_E_F_.ttx Orbitron-Medium.ttf._g_l_y_f.ttx Orbitron-Medium.ttf.O_S_2f_2.ttx Orbitron-Bold.ttf.D_S_I_G_.ttx Orbitron-Bold.ttf._p_o_s_t.ttx Orbitron-Bold.ttf.G_S_U_B_.ttx Orbitron-Bold.ttf._g_a_s_p.ttx Orbitron-Bold.ttf._p_r_e_p.ttx Orbitron-Bold.ttf._h_m_t_x.ttx Orbitron-Bold.ttf.GlyphOrder.ttx Orbitron-Bold.ttf._m_a_x_p.ttx Orbitron-Bold.ttf._h_e_a_d.ttx Orbitron-Bold.ttf.O_S_2f_2.ttx Orbitron-Bold.ttf._c_m_a_p.ttx Orbitron-Bold.ttf.G_P_O_S_.ttx Orbitron-Bold.ttf._g_l_y_f.ttx Orbitron-Bold.ttf.F_F_T_M_.ttx Orbitron-Bold.ttf.G_D_E_F_.ttx Orbitron-Bold.ttf._k_e_r_n.ttx Orbitron-Bold.ttf._h_h_e_a.ttx Orbitron-Bold.ttf._n_a_m_e.ttx Orbitron-Bold.ttf._l_o_c_a.ttx Orbitron-Black.ttf._n_a_m_e.ttx Orbitron-Black.ttf.G_D_E_F_.ttx Orbitron-Black.ttf._h_h_e_a.ttx Orbitron-Black.ttf.GlyphOrder.ttx Orbitron-Black.ttf._m_a_x_p.ttx Orbitron-Black.ttf._g_a_s_p.ttx Orbitron-Black.ttf._l_o_c_a.ttx Orbitron-Black.ttf.F_F_T_M_.ttx Orbitron-Black.ttf._p_r_e_p.ttx Orbitron-Black.ttf.O_S_2f_2.ttx Orbitron-Black.ttf.G_S_U_B_.ttx Orbitron-Black.ttf._h_e_a_d.ttx Orbitron-Black.ttf.G_P_O_S_.ttx Orbitron-Black.ttf._k_e_r_n.ttx Orbitron-Black.ttf._p_o_s_t.ttx Orbitron-Black.ttf._g_l_y_f.ttx Orbitron-Black.ttf._h_m_t_x.ttx Orbitron-Black.ttf._c_m_a_p.ttx Orbitron-Black.ttf.D_S_I_G_.ttx src/Orbitron-Black.otf.C_F_F_.ttx src/Orbitron-Black.otf._c_m_a_p.ttx src/Orbitron-Black.otf._n_a_m_e.ttx src/Orbitron-Black.otf._m_a_x_p.ttx src/Orbitron-Black.otf._h_h_e_a.ttx src/Orbitron-Black.otf.G_P_O_S_.ttx src/Orbitron-Black.otf.GlyphOrder.ttx src/Orbitron-Black.otf.G_S_U_B_.ttx src/Orbitron-Black.otf._h_m_t_x.ttx src/Orbitron-Black.otf._h_e_a_d.ttx src/Orbitron-Black.otf._k_e_r_n.ttx src/Orbitron-Black.otf.O_S_2f_2.ttx src/Orbitron-Black.otf._p_o_s_t.ttx src/Orbitron-Medium.otf._n_a_m_e.ttx src/Orbitron-Medium.otf.G_P_O_S_.ttx src/Orbitron-Medium.otf._m_a_x_p.ttx src/Orbitron-Medium.otf._h_m_t_x.ttx src/Orbitron-Medium.otf._c_m_a_p.ttx src/Orbitron-Medium.otf._h_e_a_d.ttx src/Orbitron-Medium.otf._p_o_s_t.ttx src/Orbitron-Medium.otf.G_S_U_B_.ttx src/Orbitron-Medium.otf._k_e_r_n.ttx src/Orbitron-Medium.otf.C_F_F_.ttx src/Orbitron-Medium.otf.GlyphOrder.ttx src/Orbitron-Medium.otf._h_h_e_a.ttx src/Orbitron-Medium.otf.O_S_2f_2.ttx src/Orbitron-Light.otf.GlyphOrder.ttx src/Orbitron-Light.otf.O_S_2f_2.ttx src/Orbitron-Light.otf.G_P_O_S_.ttx src/Orbitron-Light.otf.G_S_U_B_.ttx src/Orbitron-Light.otf._h_e_a_d.ttx src/Orbitron-Light.otf._h_m_t_x.ttx src/Orbitron-Light.otf._c_m_a_p.ttx src/Orbitron-Light.otf._h_h_e_a.ttx src/Orbitron-Light.otf.C_F_F_.ttx src/Orbitron-Light.otf._p_o_s_t.ttx src/Orbitron-Light.otf._m_a_x_p.ttx src/Orbitron-Light.otf._n_a_m_e.ttx src/Orbitron-Light.otf._k_e_r_n.ttx src/Orbitron-Bold.otf._m_a_x_p.ttx src/Orbitron-Bold.otf._n_a_m_e.ttx src/Orbitron-Bold.otf._h_h_e_a.ttx src/Orbitron-Bold.otf._k_e_r_n.ttx src/Orbitron-Bold.otf._p_o_s_t.ttx src/Orbitron-Bold.otf.O_S_2f_2.ttx src/Orbitron-Bold.otf.C_F_F_.ttx src/Orbitron-Bold.otf.GlyphOrder.ttx src/Orbitron-Bold.otf.G_P_O_S_.ttx src/Orbitron-Bold.otf._h_e_a_d.ttx src/Orbitron-Bold.otf._c_m_a_p.ttx src/Orbitron-Bold.otf.G_S_U_B_.ttx src/Orbitron-Bold.otf._h_m_t_x.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Regular.ttf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black.otf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Medium.ttf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Medium.otf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold.ttf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Light.otf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold.otf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black.ttf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Regular-TTF.sfd /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Medium-TTF.sfd /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold-TTF.sfd /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black-TTF.sfd > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
pyfontaine error: Not a TrueType or OpenType font (bad sfntVersion)
pyfontaine process has been failed
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
$ fontbakery-check.py upstream-ttx Orbitron-Regular.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Regular.ttf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Orbitron-Black.otf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black.otf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Orbitron-Medium.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Medium.ttf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Orbitron-Medium.otf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Medium.otf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Medium.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Orbitron-Bold.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold.ttf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Orbitron-Light.otf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Light.otf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Light.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Orbitron-Bold.otf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold.otf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream-ttx Orbitron-Black.ttf.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black.ttf.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
$ fontbakery-check.py upstream Orbitron-Regular-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
$ fontbakery-check.py upstream Orbitron-Medium-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
$ fontbakery-check.py upstream Orbitron-Bold-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
$ fontbakery-check.py upstream Orbitron-Black-TTF.sfd
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_unicode_value_should_appear_only_once_per_font.UnicodeValueShouldAppearOnlyOnce.testUnicodeValue(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
bakery_lint.tests.upstream.test_contour_count.TestContourCount.test_contour_count(): ERROR
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/orbitron/builds/build /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Medium.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Regular.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Light.ttx /home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold.ttx
$ fontbakery-build-font2ttf.py sources/Orbitron-Medium.otf Orbitron-Medium.ttf
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
Warning: Mac and Windows entries in the 'name' table differ for the
 SubFamily string in the language English (US)
 Mac String: Medium
Windows String: Regular
Warning: Mac and Windows entries in the 'name' table differ for the
 Fullname string in the language English (US)
 Mac String: Orbitron Medium
Windows String: Orbitron-Medium
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf)
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Regular-TTF.sfd
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Medium-TTF.sfd
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold-TTF.sfd
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black-TTF.sfd
Compiling "/home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Medium.ttx" to "/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
Parsing 'kern' table...
Compiling "/home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Black.ttx" to "/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Regular.ttx" to "/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'prep' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'DSIG' table...
Compiling "/home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Light.ttx" to "/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
Parsing 'kern' table...
Compiling "/home/travis/build/fontdirectory/orbitron/builds/build/sources/Orbitron-Bold.ttx" to "/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.otf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'name' table...
Parsing 'cmap' table...
Parsing 'post' table...
Parsing 'CFF ' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Parsing 'hmtx' table...
Parsing 'kern' table...
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.otf
### Test Orbitron-Medium.ttf
$ fontbakery-check.py result Orbitron-Medium.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.otf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.otf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.otf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.otf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.otf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.otf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.otf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.otf
Parameter              Orbitron-Black.ttf    Orbitron-Regular.ttf    Orbitron-Light.otf    Orbitron-Medium.ttf    Orbitron-Bold.otf    
ymax                   973                   989                     1011                  989                    969                  
hhea.ascent            1011                  1011                    1011                  1011                   1011                 
OS/2.sTypoAscender     1011                  1011                    1011                  1011                   1011                 
OS/2.usWinAscent       1011                  1011                    1011                  1011                   1011                 
ymin                   -230                  -230                    -243                  -230                   -230                 
hhea.descent           -243                  -243                    -243                  -243                   -243                 
OS/2.sTypoDescender    -243                  -243                    -243                  -243                   -243                 
OS/2.usWinDescent      243                   243                     243                   243                    243                  
hhea.lineGap           0                     0                       0                     0                      0                    
OS/2.sTypoLineGap      0                     0                       0                     0                      0                    
hhea total             1254                  1254                    1254                  1254                   1254                 
typo total             1254                  1254                    1254                  1254                   1254                 
win total              1254                  1254                    1254                  1254                   1254                 
UPM:Heights            1000:1203             1000:1219               1000:1254             1000:1219              1000:1199            
UPM:Heights %          120 %                 121 %                   125 %                 121 %                  119 %                


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Orbitron-Medium.ttf
$ ls -l 'Orbitron-Medium.ttf'* # look at the size savings of that subset process
Orbitron-Medium.ttf.opt: 23544 bytes
Orbitron-Medium.ttf: 25424 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.opt /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
### Autohint TTFs (ttfautohint) Orbitron-Medium.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf '/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf: 23544 bytes
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.autohint.ttf: 39996 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.autohint.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
### Subset TTFs (pyftsubset) Orbitron-Medium.ttf
$ pyftsubset Orbitron-Medium.latin
$ pyftsubset Orbitron-Medium.menu
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
No nbsp glyph
spaceWidth is    290
nbspWidth is     0
Orbitron-Medium.ttf.fix made with spaceWidth and nbspWidth of 290
### Test Orbitron-Black.ttf
$ fontbakery-check.py result Orbitron-Black.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Orbitron-Black.ttf
$ ls -l 'Orbitron-Black.ttf'* # look at the size savings of that subset process
Orbitron-Black.ttf.opt: 29692 bytes
Orbitron-Black.ttf: 37704 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.opt /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
### Autohint TTFs (ttfautohint) Orbitron-Black.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf '/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf: 29692 bytes
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.autohint.ttf: 46856 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.autohint.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
### Subset TTFs (pyftsubset) Orbitron-Black.ttf
$ pyftsubset Orbitron-Black.latin
$ pyftsubset Orbitron-Black.menu
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
No nbsp glyph
spaceWidth is    322
nbspWidth is     0
Orbitron-Black.ttf.fix made with spaceWidth and nbspWidth of 322
### Test Orbitron-Regular.ttf
$ fontbakery-check.py result Orbitron-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Orbitron-Regular.ttf
$ ls -l 'Orbitron-Regular.ttf'* # look at the size savings of that subset process
Orbitron-Regular.ttf.opt: 32452 bytes
Orbitron-Regular.ttf: 39828 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.opt /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
### Autohint TTFs (ttfautohint) Orbitron-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf '/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf: 32452 bytes
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.autohint.ttf: 48668 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.autohint.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
### Subset TTFs (pyftsubset) Orbitron-Regular.ttf
$ pyftsubset Orbitron-Regular.latin
$ pyftsubset Orbitron-Regular.menu
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
No nbsp glyph
spaceWidth is    290
nbspWidth is     0
Orbitron-Regular.ttf.fix made with spaceWidth and nbspWidth of 290
$ fontbakery-build-font2ttf.py sources/Orbitron-Light.otf Orbitron-Light.ttf
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
Warning: Mac and Windows entries in the 'name' table differ for the
 Fullname string in the language English (US)
 Mac String: Orbitron Light
Windows String: Orbitron-Light
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf)
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.otf
### Test Orbitron-Light.ttf
$ fontbakery-check.py result Orbitron-Light.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Orbitron-Light.ttf
$ ls -l 'Orbitron-Light.ttf'* # look at the size savings of that subset process
Orbitron-Light.ttf.opt: 23536 bytes
Orbitron-Light.ttf: 25384 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.opt /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
### Autohint TTFs (ttfautohint) Orbitron-Light.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf '/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf: 23536 bytes
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.autohint.ttf: 39648 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.autohint.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
### Subset TTFs (pyftsubset) Orbitron-Light.ttf
$ pyftsubset Orbitron-Light.latin
$ pyftsubset Orbitron-Light.menu
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
No nbsp glyph
spaceWidth is    272
nbspWidth is     0
Orbitron-Light.ttf.fix made with spaceWidth and nbspWidth of 272
$ fontbakery-build-font2ttf.py sources/Orbitron-Bold.otf Orbitron-Bold.ttf
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
Warning: Mac and Windows entries in the 'name' table differ for the
 Fullname string in the language English (US)
 Mac String: Orbitron Bold
Windows String: Orbitron-Bold
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf)
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.otf
### Test Orbitron-Bold.ttf
$ fontbakery-check.py result Orbitron-Bold.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): ERROR
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Orbitron-Bold.ttf
$ ls -l 'Orbitron-Bold.ttf'* # look at the size savings of that subset process
Orbitron-Bold.ttf.opt: 22240 bytes
Orbitron-Bold.ttf: 24088 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.opt /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
### Autohint TTFs (ttfautohint) Orbitron-Bold.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf '/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf: 22240 bytes
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.autohint.ttf: 39452 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.autohint.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
### Subset TTFs (pyftsubset) Orbitron-Bold.ttf
$ pyftsubset Orbitron-Bold.latin
$ pyftsubset Orbitron-Bold.menu
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
No nbsp glyph
spaceWidth is    308
nbspWidth is     0
Orbitron-Bold.ttf.fix made with spaceWidth and nbspWidth of 308
$ fontbakery-build-font2ttf.py sources/Orbitron-Regular-TTF.sfd Orbitron-Regular-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf)
### Test Orbitron-Regular-TTF.ttf
$ fontbakery-check.py result Orbitron-Regular-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
Parameter              Orbitron-Black.ttf    Orbitron-Light.ttf    Orbitron-Regular.ttf    Orbitron-Bold.ttf    Orbitron-Regular-TTF.ttf    Orbitron-Medium.ttf    
ymax                   973                   1011                  989                     969                  1011                        989                    
hhea.ascent            1011                  1011                  1011                    1011                 1011                        1011                   
OS/2.sTypoAscender     1011                  1011                  1011                    1011                 1011                        1011                   
OS/2.usWinAscent       1011                  1011                  1011                    1011                 1011                        1011                   
ymin                   -230                  -243                  -230                    -230                 -243                        -230                   
hhea.descent           -243                  -243                  -243                    -243                 -243                        -243                   
OS/2.sTypoDescender    -243                  -243                  -243                    -243                 -243                        -243                   
OS/2.usWinDescent      243                   243                   243                     243                  243                         243                    
hhea.lineGap           0                     0                     0                       0                    0                           0                      
OS/2.sTypoLineGap      0                     0                     0                       0                    0                           0                      
hhea total             1254                  1254                  1254                    1254                 1254                        1254                   
typo total             1254                  1254                  1254                    1254                 1254                        1254                   
win total              1254                  1254                  1254                    1254                 1254                        1254                   
UPM:Heights            1000:1203             1000:1254             1000:1219               1000:1199            1000:1254                   1000:1219              
UPM:Heights %          120 %                 125 %                 121 %                   119 %                125 %                       121 %                  


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Orbitron-Regular-TTF.ttf
$ ls -l 'Orbitron-Regular-TTF.ttf'* # look at the size savings of that subset process
Orbitron-Regular-TTF.ttf.opt: 32368 bytes
Orbitron-Regular-TTF.ttf: 38668 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.opt /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
### Autohint TTFs (ttfautohint) Orbitron-Regular-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf '/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf: 32368 bytes
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.autohint.ttf: 48412 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.autohint.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
### Subset TTFs (pyftsubset) Orbitron-Regular-TTF.ttf
$ pyftsubset Orbitron-Regular-TTF.latin
$ pyftsubset Orbitron-Regular-TTF.menu
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
No nbsp glyph
spaceWidth is    272
nbspWidth is     0
Orbitron-Regular-TTF.ttf.fix made with spaceWidth and nbspWidth of 272
$ fontbakery-build-font2ttf.py sources/Orbitron-Medium-TTF.sfd Orbitron-Medium-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf)
### Test Orbitron-Medium-TTF.ttf
$ fontbakery-check.py result Orbitron-Medium-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
Parameter              Orbitron-Black.ttf    Orbitron-Light.ttf    Orbitron-Regular.ttf    Orbitron-Bold.ttf    Orbitron-Medium-TTF.ttf    Orbitron-Regular-TTF.ttf    Orbitron-Medium.ttf    
ymax                   973                   1011                  989                     969                  989                        1011                        989                    
hhea.ascent            1011                  1011                  1011                    1011                 1011                       1011                        1011                   
OS/2.sTypoAscender     1011                  1011                  1011                    1011                 1011                       1011                        1011                   
OS/2.usWinAscent       1011                  1011                  1011                    1011                 1011                       1011                        1011                   
ymin                   -230                  -243                  -230                    -230                 -230                       -243                        -230                   
hhea.descent           -243                  -243                  -243                    -243                 -243                       -243                        -243                   
OS/2.sTypoDescender    -243                  -243                  -243                    -243                 -243                       -243                        -243                   
OS/2.usWinDescent      243                   243                   243                     243                  243                        243                         243                    
hhea.lineGap           0                     0                     0                       0                    0                          0                           0                      
OS/2.sTypoLineGap      0                     0                     0                       0                    0                          0                           0                      
hhea total             1254                  1254                  1254                    1254                 1254                       1254                        1254                   
typo total             1254                  1254                  1254                    1254                 1254                       1254                        1254                   
win total              1254                  1254                  1254                    1254                 1254                       1254                        1254                   
UPM:Heights            1000:1203             1000:1254             1000:1219               1000:1199            1000:1219                  1000:1254                   1000:1219              
UPM:Heights %          120 %                 125 %                 121 %                   119 %                121 %                      125 %                       121 %                  


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Orbitron-Medium-TTF.ttf
$ ls -l 'Orbitron-Medium-TTF.ttf'* # look at the size savings of that subset process
Orbitron-Medium-TTF.ttf.opt: 32440 bytes
Orbitron-Medium-TTF.ttf: 38760 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.opt /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
### Autohint TTFs (ttfautohint) Orbitron-Medium-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf '/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf: 32440 bytes
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.autohint.ttf: 48812 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.autohint.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
### Subset TTFs (pyftsubset) Orbitron-Medium-TTF.ttf
$ pyftsubset Orbitron-Medium-TTF.latin
$ pyftsubset Orbitron-Medium-TTF.menu
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
No nbsp glyph
spaceWidth is    290
nbspWidth is     0
Orbitron-Medium-TTF.ttf.fix made with spaceWidth and nbspWidth of 290
$ fontbakery-build-font2ttf.py sources/Orbitron-Bold-TTF.sfd Orbitron-Bold-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf)
### Test Orbitron-Bold-TTF.ttf
$ fontbakery-check.py result Orbitron-Bold-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
Parameter              Orbitron-Black.ttf    Orbitron-Light.ttf    Orbitron-Regular.ttf    Orbitron-Bold-TTF.ttf    Orbitron-Bold.ttf    Orbitron-Medium-TTF.ttf    Orbitron-Regular-TTF.ttf    Orbitron-Medium.ttf    
ymax                   973                   1011                  989                     969                      969                  989                        1011                        989                    
hhea.ascent            1011                  1011                  1011                    1011                     1011                 1011                       1011                        1011                   
OS/2.sTypoAscender     1011                  1011                  1011                    1011                     1011                 1011                       1011                        1011                   
OS/2.usWinAscent       1011                  1011                  1011                    1011                     1011                 1011                       1011                        1011                   
ymin                   -230                  -243                  -230                    -230                     -230                 -230                       -243                        -230                   
hhea.descent           -243                  -243                  -243                    -243                     -243                 -243                       -243                        -243                   
OS/2.sTypoDescender    -243                  -243                  -243                    -243                     -243                 -243                       -243                        -243                   
OS/2.usWinDescent      243                   243                   243                     243                      243                  243                        243                         243                    
hhea.lineGap           0                     0                     0                       0                        0                    0                          0                           0                      
OS/2.sTypoLineGap      0                     0                     0                       0                        0                    0                          0                           0                      
hhea total             1254                  1254                  1254                    1254                     1254                 1254                       1254                        1254                   
typo total             1254                  1254                  1254                    1254                     1254                 1254                       1254                        1254                   
win total              1254                  1254                  1254                    1254                     1254                 1254                       1254                        1254                   
UPM:Heights            1000:1203             1000:1254             1000:1219               1000:1199                1000:1199            1000:1219                  1000:1254                   1000:1219              
UPM:Heights %          120 %                 125 %                 121 %                   119 %                    119 %                121 %                      125 %                       121 %                  


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Orbitron-Bold-TTF.ttf
$ ls -l 'Orbitron-Bold-TTF.ttf'* # look at the size savings of that subset process
Orbitron-Bold-TTF.ttf.opt: 31092 bytes
Orbitron-Bold-TTF.ttf: 37372 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf.opt /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
### Autohint TTFs (ttfautohint) Orbitron-Bold-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf '/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf: 31092 bytes
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.autohint.ttf: 48304 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.autohint.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
### Subset TTFs (pyftsubset) Orbitron-Bold-TTF.ttf
$ pyftsubset Orbitron-Bold-TTF.latin
$ pyftsubset Orbitron-Bold-TTF.menu
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
No nbsp glyph
spaceWidth is    308
nbspWidth is     0
Orbitron-Bold-TTF.ttf.fix made with spaceWidth and nbspWidth of 308
$ fontbakery-build-font2ttf.py sources/Orbitron-Black-TTF.sfd Orbitron-Black-TTF.ttf
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf)
### Test Orbitron-Black-TTF.ttf
$ fontbakery-check.py result Orbitron-Black-TTF.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Light.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Bold.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Regular-TTF.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Medium.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
Parameter              Orbitron-Black.ttf    Orbitron-Light.ttf    Orbitron-Regular.ttf    Orbitron-Bold-TTF.ttf    Orbitron-Bold.ttf    Orbitron-Medium-TTF.ttf    Orbitron-Regular-TTF.ttf    Orbitron-Medium.ttf    Orbitron-Black-TTF.ttf    
ymax                   973                   1011                  989                     969                      969                  989                        1011                        989                    973                       
hhea.ascent            1011                  1011                  1011                    1011                     1011                 1011                       1011                        1011                   1011                      
OS/2.sTypoAscender     1011                  1011                  1011                    1011                     1011                 1011                       1011                        1011                   1011                      
OS/2.usWinAscent       1011                  1011                  1011                    1011                     1011                 1011                       1011                        1011                   1011                      
ymin                   -230                  -243                  -230                    -230                     -230                 -230                       -243                        -230                   -230                      
hhea.descent           -243                  -243                  -243                    -243                     -243                 -243                       -243                        -243                   -243                      
OS/2.sTypoDescender    -243                  -243                  -243                    -243                     -243                 -243                       -243                        -243                   -243                      
OS/2.usWinDescent      243                   243                   243                     243                      243                  243                        243                         243                    243                       
hhea.lineGap           0                     0                     0                       0                        0                    0                          0                           0                      0                         
OS/2.sTypoLineGap      0                     0                     0                       0                        0                    0                          0                           0                      0                         
hhea total             1254                  1254                  1254                    1254                     1254                 1254                       1254                        1254                   1254                      
typo total             1254                  1254                  1254                    1254                     1254                 1254                       1254                        1254                   1254                      
win total              1254                  1254                  1254                    1254                     1254                 1254                       1254                        1254                   1254                      
UPM:Heights            1000:1203             1000:1254             1000:1219               1000:1199                1000:1199            1000:1219                  1000:1254                   1000:1219              1000:1203                 
UPM:Heights %          120 %                 125 %                 121 %                   119 %                    119 %                121 %                      125 %                       121 %                  120 %                     


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ fontbakery-fix-glyph-private-encoding.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf.fix /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_menu_file_exists(): FAIL
### Optimize TTF Orbitron-Black-TTF.ttf
$ ls -l 'Orbitron-Black-TTF.ttf'* # look at the size savings of that subset process
Orbitron-Black-TTF.ttf.opt: 29692 bytes
Orbitron-Black-TTF.ttf: 35964 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf.opt /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
### Autohint TTFs (ttfautohint) Orbitron-Black-TTF.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf '/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf: 29692 bytes
/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.autohint.ttf: 46972 bytes
$ mv /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.autohint.ttf /home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
### Subset TTFs (pyftsubset) Orbitron-Black-TTF.ttf
$ pyftsubset Orbitron-Black-TTF.latin
$ pyftsubset Orbitron-Black-TTF.menu
strippedname:/home/travis/build/fontdirectory/orbitron/builds/build/Orbitron-Black-TTF.ttf
No nbsp glyph
spaceWidth is    322
nbspWidth is     0
Orbitron-Black-TTF.ttf.fix made with spaceWidth and nbspWidth of 322
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/orbitron/builds/build
{} exists
Designer's name from font is: Matt McInerney
Original size: 48668\nGzip size: 20661
Family Name: Orbitron
PS Name: Orbitron-Black
Full Name: Orbitron-Black
Style: normal
Weight: 900
Filename: Orbitron-Black.ttf
Copyright: Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>
Family Name: Orbitron
PS Name: Orbitron-Light
Full Name: Orbitron-Light
Style: normal
Weight: 300
Filename: Orbitron-Light.ttf
Copyright: Generated in 2009 by FontLab Studio. Copyright info pending.
Family Name: Orbitron
PS Name: Orbitron-Medium
Full Name: Orbitron-Medium
Style: normal
Weight: 500
Filename: Orbitron-Regular.ttf
Copyright: Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>
Family Name: Orbitron
PS Name: Orbitron-Bold
Full Name: Orbitron-Bold
Style: normal
Weight: 700
Filename: Orbitron-Bold-TTF.ttf
Copyright: Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>
Family Name: Orbitron
PS Name: Orbitron-Bold
Full Name: Orbitron-Bold
Style: normal
Weight: 700
Filename: Orbitron-Bold.ttf
Copyright: Generated in 2009 by FontLab Studio. Copyright info pending.
Family Name: Orbitron
PS Name: Orbitron-Medium
Full Name: Orbitron-Medium
Style: normal
Weight: 500
Filename: Orbitron-Medium-TTF.ttf
Copyright: Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>
Family Name: Orbitron
PS Name: Orbitron-Regular
Full Name: Orbitron-Light
Style: normal
Weight: 400
Filename: Orbitron-Regular-TTF.ttf
Copyright: Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>
Family Name: Orbitron
PS Name: Orbitron-Medium
Full Name: Orbitron-Medium
Style: normal
Weight: 500
Filename: Orbitron-Medium.ttf
Copyright: Generated in 2009 by FontLab Studio. Copyright info pending.
Family Name: Orbitron
PS Name: Orbitron-Black
Full Name: Orbitron-Black
Style: normal
Weight: 900
Filename: Orbitron-Black-TTF.ttf
Copyright: Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): OK
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
{
  "name": "Orbitron", 
  "designer": "Matt McInerney", 
  "license": "OFL", 
  "visibility": "External", 
  "category": "Sans Serif", 
  "size": 17599, 
  "fonts": [
    {
      "name": "Orbitron", 
      "postScriptName": "Orbitron-Black", 
      "fullName": "Orbitron-Black", 
      "style": "normal", 
      "weight": 900, 
      "filename": "Orbitron-Black.ttf", 
      "copyright": "Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>"
    }, 
    {
      "name": "Orbitron", 
      "postScriptName": "Orbitron-Light", 
      "fullName": "Orbitron-Light", 
      "style": "normal", 
      "weight": 300, 
      "filename": "Orbitron-Light.ttf", 
      "copyright": "Generated in 2009 by FontLab Studio. Copyright info pending."
    }, 
    {
      "name": "Orbitron", 
      "postScriptName": "Orbitron-Medium", 
      "fullName": "Orbitron-Medium", 
      "style": "normal", 
      "weight": 500, 
      "filename": "Orbitron-Regular.ttf", 
      "copyright": "Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>"
    }, 
    {
      "name": "Orbitron", 
      "postScriptName": "Orbitron-Bold", 
      "fullName": "Orbitron-Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "Orbitron-Bold-TTF.ttf", 
      "copyright": "Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>"
    }, 
    {
      "name": "Orbitron", 
      "postScriptName": "Orbitron-Bold", 
      "fullName": "Orbitron-Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "Orbitron-Bold.ttf", 
      "copyright": "Generated in 2009 by FontLab Studio. Copyright info pending."
    }, 
    {
      "name": "Orbitron", 
      "postScriptName": "Orbitron-Medium", 
      "fullName": "Orbitron-Medium", 
      "style": "normal", 
      "weight": 500, 
      "filename": "Orbitron-Medium-TTF.ttf", 
      "copyright": "Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>"
    }, 
    {
      "name": "Orbitron", 
      "postScriptName": "Orbitron-Regular", 
      "fullName": "Orbitron-Light", 
      "style": "normal", 
      "weight": 400, 
      "filename": "Orbitron-Regular-TTF.ttf", 
      "copyright": "Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>"
    }, 
    {
      "name": "Orbitron", 
      "postScriptName": "Orbitron-Medium", 
      "fullName": "Orbitron-Medium", 
      "style": "normal", 
      "weight": 500, 
      "filename": "Orbitron-Medium.ttf", 
      "copyright": "Generated in 2009 by FontLab Studio. Copyright info pending."
    }, 
    {
      "name": "Orbitron", 
      "postScriptName": "Orbitron-Black", 
      "fullName": "Orbitron-Black", 
      "style": "normal", 
      "weight": 900, 
      "filename": "Orbitron-Black-TTF.ttf", 
      "copyright": "Copyright (c) 2009, Matt McInerney <matt@pixelspread.com>"
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2010-12-15"
}
